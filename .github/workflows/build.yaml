name: Build Z3 Static

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set Z3 version from tag
        id: z3version
        shell: bash
        run: |
          TAG=${GITHUB_REF##*/}
          VERSION=${TAG#v}  # strip leading 'v'
          echo "version_from_tag=$VERSION" >> $GITHUB_OUTPUT

      - name: Use version
        shell: bash
        run: echo "Building Z3 version ${{ steps.z3version.outputs.version_from_tag }}"

      - name: Get {platform}-{arch} name
        id: platform-arch
        shell: bash
        run: |
          PLATFORM_ARCH=$(node -p "require('os').platform() + '-' + require('os').arch()")
          echo "platform_arch=$PLATFORM_ARCH" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y cmake make g++

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install --formula cmake make gcc

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Cache Z3 source
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/z3-${{ steps.z3version.outputs.version_from_tag }}-${{ steps.platform-arch.outputs.platform_arch }}
          key: z3-${{ steps.z3version.outputs.version_from_tag }}-${{ steps.platform-arch.outputs.platform_arch }}-source
          restore-keys: |
            z3-${{ steps.z3version.outputs.version_from_tag }}-${{ steps.platform-arch.outputs.platform_arch }}-source

      - name: Cache Z3 build output
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/z3-${{ steps.z3version.outputs.version_from_tag }}-${{ steps.platform-arch.outputs.platform_arch }}/build
          key: z3-${{ steps.z3version.outputs.version_from_tag }}-${{ steps.platform-arch.outputs.platform_arch }}-build
          restore-keys: |
            z3-${{ steps.z3version.outputs.version_from_tag }}-${{ steps.platform-arch.outputs.platform_arch }}-build

      - name: Build Z3
        shell: bash
        run: bash scripts/build.sh

      - name: Archive build (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          mkdir -p archives
          pwsh -Command "Compress-Archive -Path dist/* -DestinationPath archives/z3-${{ steps.z3version.outputs.version_from_tag }}-${{ steps.platform-arch.outputs.platform_arch }}.zip"

      - name: Archive build (Non-Windows)
        if: runner.os == 'macOS' || runner.os == 'Linux'
        shell: bash
        run: |
          mkdir -p archives
          zip -r "archives/z3-${{ steps.z3version.outputs.version_from_tag }}-${{ steps.platform-arch.outputs.platform_arch }}.zip" dist

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: archives/z3-${{ steps.z3version.outputs.version_from_tag }}-${{ steps.platform-arch.outputs.platform_arch }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
